[{"C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\index.tsx":"1","C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\components\\ObjectDetection\\utils.ts":"2","C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\components\\ObjectDetection\\useLoadVideo.ts":"3"},{"size":504,"mtime":1610631756810,"results":"4","hashOfConfig":"5"},{"size":454,"mtime":1610646646944,"results":"6","hashOfConfig":"5"},{"size":1161,"mtime":1610648867869,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bkip56",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\index.tsx",[],"C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\components\\ObjectDetection\\utils.ts",[],"C:\\Users\\brahimkellou\\TIW\\tiw8-tws\\open-io\\src\\components\\ObjectDetection\\useLoadVideo.ts",["15"],"import { useEffect, useState } from 'react';\r\n\r\ninterface videoOptions {\r\n  width?: number,\r\n  height?: number,\r\n  videoRef?: any\r\n}\r\n\r\nfunction useLoadVideo({\r\n  width,\r\n  height,\r\n  videoRef,\r\n}: videoOptions) {\r\n\r\n  const [video, setVideo] = useState();\r\n\r\n  useEffect(() => {\r\n    async function setupCamera(): Promise<any> {\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error(\r\n          'Browser API navigator.mediaDevices.getUserMedia not available');\r\n      }\r\n      const video = videoRef.current;\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        'audio': false,\r\n        'video': {\r\n          facingMode: 'user',\r\n          width: width,\r\n          height: height,\r\n        },\r\n      });\r\n      videoRef.current.srcObject = stream;\r\n\r\n      return new Promise((resolve) => {\r\n        video.onloadedmetadata = () => {\r\n          resolve(video);\r\n        };\r\n      });\r\n    }\r\n\r\n    setupCamera().then(video => {\r\n      video.play();\r\n      setVideo(videoRef.current);\r\n    });\r\n\r\n    return () => { }\r\n\r\n  }, [videoRef])\r\n\r\n  return video;\r\n}\r\n\r\nexport default useLoadVideo;",{"ruleId":"16","severity":1,"message":"17","line":48,"column":6,"nodeType":"18","endLine":48,"endColumn":16,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'height' and 'width'. Either include them or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [height, videoRef, width]",{"range":"23","text":"24"},[1096,1106],"[height, videoRef, width]"]